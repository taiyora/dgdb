extends ../layout

block content
	script.
		const coloursRainbowThin =  [
			'rgba(253,163,180,.2)',
			'rgba(253,195,163,.2)',
			'rgba(253,242,163,.2)',
			'rgba(204,253,163,.2)',
			'rgba(163,253,170,.2)',
			'rgba(163,253,217,.2)',
			'rgba(163,253,249,.2)',
			'rgba(163,221,253,.2)',
			'rgba(163,170,253,.2)',
			'rgba(212,163,253,.2)' ];

		const coloursRainbowThick = [
			'rgba(253,163,180,.8)',
			'rgba(253,195,163,.8)',
			'rgba(253,242,163,.8)',
			'rgba(204,253,163,.8)',
			'rgba(163,253,170,.8)',
			'rgba(163,253,217,.8)',
			'rgba(163,253,249,.8)',
			'rgba(163,221,253,.8)',
			'rgba(163,170,253,.8)',
			'rgba(212,163,253,.8)' ];

		const coloursRainbowFull = [
			'rgb(253,163,180)',
			'rgb(253,195,163)',
			'rgb(253,242,163)',
			'rgb(204,253,163)',
			'rgb(163,253,170)',
			'rgb(163,253,217)',
			'rgb(163,253,249)',
			'rgb(163,221,253)',
			'rgb(163,170,253)',
			'rgb(212,163,253)' ];

		function renderRatingsChart() {
			const ratings = [!{game.ratings}];
			let ratingCounts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

			// Convert the list of ratings into an array of frequencies
			for (let i = 0; i < ratings.length; i++) {
				ratingCounts[Math.round(ratings[i]) - 1]++;
			}

			Chart.defaults.global.defaultFontFamily = 'Verdana';
			Chart.defaults.global.defaultFontSize = 11;

			let ctx = document.getElementById('ratings-chart').getContext('2d');
			let chart = new Chart(ctx, {
				type: 'bar',
				data: {
					labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
					datasets: [{
						label: ' Ratings',
						data: ratingCounts,
						backgroundColor: coloursRainbowThin,
						borderColor: coloursRainbowThick,
						borderWidth: 1
					}]
				},
				options: {
					legend: {
						display: false
					},
					scales: {
						yAxes: [{
							position: 'right',
							ticks: {
								callback: function(value) { if (value % 1 === 0) { return value; }}
							}
						}]
					}
				}
			});
		}

		$(document).ready(function() {
			renderRatingsChart();

			// Set the text colour of all rating values to a rainbow colour
			$('.rating').each(function(i, obj) {
				$(this).css('color', coloursRainbowFull[Math.round($(this).text()) - 1]);
			});

			$('#user-rating').css('color', coloursRainbowFull[Math.round($('#user-rating').val()) - 1]);
			$('#user-rating').on('input', function() {
				$('#user-rating').css('color', coloursRainbowFull[Math.round($('#user-rating').val()) - 1]);
			});

			// Convert absolute timestamps to "... ago" format
			$('.timestamp').each(function(i, obj) {
				this.innerHTML = moment(this.innerHTML).fromNow();
			});

			// Update database when user changes their rating
			$('#rating-form').submit(function(e) {
				// Prevent the page from trying to change
				e.preventDefault();
				e.stopImmediatePropagation();

				// Temporarily disable the submit button
				$('#rating-submit').prop('disabled', true);

				$.ajax({
					type: 'POST',
					url: '/game/updateRating',
					data: $('#rating-form').serialize(),
					success: function(res) {
						if (res == 'success') {
							$('#rating-saved').show();
							$('#rating-saved').fadeOut(3000);
						}

						$('#rating-submit').prop('disabled', false);
					}
				});

				return false; // Not sure if this is needed
			});
		});

	if error
		div.main
			p.error(align='center')= error

	else
		div(style='float: left; width: 80%;')
			div.main
				table
					tr
						td(width='50%')
							table
								if game.title_jp
									tr.list
										td.label(width='30%')
											p Japanese title
										td
											p !{game.title_jp}

								if game.title_romaji
									tr.list
										td.label
											p Japanese title (romaji)
										td
											p= game.title_romaji

								if game.title_english
									tr.list
										td.label
											p English title
										td
											p= game.title_english

									tr.list
										td.label
											p Officially localized title?
										td
											if game.title_english_official
												p Yes
											else
												p No

								if game.title_other
									tr.list
										td.label
											p Also known as
										td
											p= game.title_other

						td
							if game.title_jp
								h2.fancy= game.title_jp

							if game.title_romaji
								h3.fancy(style='position: relative; bottom: 8px;')
									| <span class='subdued'>(!{game.title_romaji})</span>

							if game.title_english
								h3.fancy(style='position: relative; bottom: 8px;')
									| !{game.title_english}

		div(style='float: right; width: 19.6%;')
			div.main
				each ss in game.ss_urls
					a(href=ss) <img src=!{ss} width='100%'>

		div(style='float: left; width: 80%;')
			h3.heading Ratings and Reviews

			div.main(style='float: left; width: 30%;')
				if user
					div(style='padding: 5px; padding-left: 15px; background: rgba(0,0,0,.3);')
						form#rating-form
							input(type='hidden' name='game_id' value=game.id)

							p Your rating: &nbsp;
								| <input id='user-rating' type='number' name='user_rating' min='1' max='10' step='.1' value=!{game.user_rating}>
								| <span class='subdued'>/10</span> &nbsp;
								| <input id='rating-submit' type='submit' class='small' value='Save'> &nbsp;
								| <span id='rating-saved' class='gold' style='display: none;'>Saved!</span>

				table
					tr.list
						td.label(width='52%')
							p Average rating
						td
							p.rating= game.rating_average

					tr.list
						td.label
							p Number of ratings
						td
							p= game.ratings.length

				div(style='margin: 10px 0 10px 0;')
					canvas#ratings-chart

				table
					each rating in game.ratings_recent
						tr.list
							td.label(width='36%')
								p.timestamp= rating.f3
							td(width='16%')
								p.rating= rating.f2
							td
								p= rating.f1

			div.main(style='float: right; width: 69.5%;')
				p No reviews found
