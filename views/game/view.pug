extends ../layout

block content
	script.
		const coloursRainbowThin =  [
			'rgba(253,163,180,.2)',
			'rgba(253,195,163,.2)',
			'rgba(253,242,163,.2)',
			'rgba(204,253,163,.2)',
			'rgba(163,253,170,.2)',
			'rgba(163,253,217,.2)',
			'rgba(163,253,249,.2)',
			'rgba(163,221,253,.2)',
			'rgba(163,170,253,.2)',
			'rgba(212,163,253,.2)' ];

		const coloursRainbowThick = [
			'rgba(253,163,180,.8)',
			'rgba(253,195,163,.8)',
			'rgba(253,242,163,.8)',
			'rgba(204,253,163,.8)',
			'rgba(163,253,170,.8)',
			'rgba(163,253,217,.8)',
			'rgba(163,253,249,.8)',
			'rgba(163,221,253,.8)',
			'rgba(163,170,253,.8)',
			'rgba(212,163,253,.8)' ];

		const coloursRainbowFull = [
			'rgb(253,163,180)',
			'rgb(253,195,163)',
			'rgb(253,242,163)',
			'rgb(204,253,163)',
			'rgb(163,253,170)',
			'rgb(163,253,217)',
			'rgb(163,253,249)',
			'rgb(163,221,253)',
			'rgb(163,170,253)',
			'rgb(212,163,253)' ];

		function renderRatingsChart() {
			const ratings = [!{game.ratings}];
			let ratingCounts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

			// Convert the list of ratings into an array of frequencies
			for (let i = 0; i < ratings.length; i++) {
				ratingCounts[Math.round(ratings[i]) - 1]++;
			}

			Chart.defaults.global.defaultFontFamily = 'Verdana';
			Chart.defaults.global.defaultFontSize = 11;

			let ctx = document.getElementById('ratings-chart').getContext('2d');
			let chart = new Chart(ctx, {
				type: 'bar',
				data: {
					labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
					datasets: [{
						label: ' Ratings',
						data: ratingCounts,
						backgroundColor: coloursRainbowThin,
						borderColor: coloursRainbowThick,
						borderWidth: 1
					}]
				},
				options: {
					legend: {
						display: false
					},
					scales: {
						yAxes: [{
							position: 'right',
							ticks: {
								callback: function(value) { if (value % 1 === 0) { return value; }}
							}
						}]
					}
				}
			});
		}

		$(document).ready(function() {
			if (!{game.ratings.length}) {
				renderRatingsChart();
			}

			// Set the text colour of all rating values to a rainbow colour
			$('.rating').each(function(i, obj) {
				$(this).css('color', coloursRainbowFull[Math.round($(this).text()) - 1]);
			});

			$('#user-rating').css('color', coloursRainbowFull[Math.round($('#user-rating').val()) - 1]);
			$('#user-rating').on('input', function() {
				$('#user-rating').css('color', coloursRainbowFull[Math.round($('#user-rating').val()) - 1]);
			});

			// Convert absolute timestamps to "... ago" format
			$('.timestamp').each(function(i, obj) {
				this.innerHTML = moment(this.innerHTML).fromNow();
			});

			// Update database when user changes their rating
			$('#rating-form').submit(function(e) {
				// Prevent the page from trying to change
				e.preventDefault();
				e.stopImmediatePropagation();

				// Temporarily disable the submit button
				$('#rating-submit').prop('disabled', true);

				$.ajax({
					type: 'POST',
					url: '/game/updateRating',
					data: $('#rating-form').serialize(),
					success: function(res) {
						if (res == 'success') {
							$('#rating-saved').show();
							$('#rating-saved').fadeOut(3000);
						}

						$('#rating-submit').prop('disabled', false);
					}
				});

				return false; // Not sure if this is needed
			});

			// Update database when user submits a review
			$('#review-form').submit(function(e) {
				// Prevent the page from trying to change
				e.preventDefault();
				e.stopImmediatePropagation();

				// Temporarily disable the submit button
				$('#review-submit').prop('disabled', true);

				$.ajax({
					type: 'POST',
					url: '/game/updateReview',
					data: $('#review-form').serialize(),
					success: function(res) {
						if (res == 'success') {
							$('#review-saved').show();
							$('#review-saved').fadeOut(3000);
						}

						$('#review-submit').prop('disabled', false);
					}
				});

				return false; // Not sure if this is needed
			});
		});

	if error
		div.main
			p.error(align='center')= error

	else
		div.edit-page-link
			p <a class='gold' href='/game/edit/!{game.id}'>edit page <span class='icon-edit'>✎</span></a>
			p <a href='/game/revisions/!{game.id}'>revision history</a>

		div(style='float: left; width: 80%;')
			div.main
				table
					tr
						td(width='60%' style='background: rgba(128,192,255,.05);')
							center
								if game.title_jp
									h2= game.title_jp

								if game.title_romaji
									h3.fancy <span class='subdued'>(!{game.title_romaji})</span>

								if game.title_english && (game.title_english != game.title_jp) && (game.title_english != game.title_romaji)
									h3.fancy= game.title_english

							br

							if game.description
								div.darkened
									pre= game.description

						td
							table
								if game.title_jp
									tr.list
										td.label(width='40%')
											p Japanese title
										td
											p !{game.title_jp}

								if game.title_romaji
									tr.list
										td.label
											p Japanese title (romaji)
										td
											p= game.title_romaji

								if game.title_english
									tr.list
										td.label
											p English title
										td
											p= game.title_english

									tr.list
										td.label
											p Officially localized title?
										td
											if game.title_english_official
												p Yes
											else
												p No

								if game.title_other
									tr.list
										td.label
											p Also known as
										td
											p= game.title_other

								if game.creator
									tr.list
										td.label
											p Creator
										td
											p= game.creator

								if game.company
									tr.list
										td.label
											p Company/Circle
										td
											p= game.company

								if game.publisher
									tr.list
										td.label
											p Publisher
										td
											p= game.publisher

								if game.website
									tr.list
										td.label
											p Website
										td
											p <a class='normal' href=!{game.website}>Link</a>

								if game.vndb
									tr.list
										td.label
											p VNDB page
										td
											p <a class='normal' href=!{game.vndb}>Link</a>

								if game.download
									tr.list
										td.label
											p Download
										td
											if game.english_translated
												p <a class='normal' href=!{game.download}>Link</a>
													<span class='purple'> (English)</span>

											else
												p <a class='normal' href=!{game.download}>Link</a>
													<span class='subdued'> (Japanese)</span>

								if game.download_alt
									tr.list
										td.label
											p Alternative download
										td
											if game.english_translated
												p <a class='normal' href=!{game.download_alt}>Link</a>
													<span class='purple'> (English)</span>

											else
												p <a class='normal' href=!{game.download_alt}>Link</a>
													<span class='subdued'> (Japanese)</span>

								if game.other_links
									tr
										td.label
											p Other links
										td
											each link in game.other_links.split('\n')
												p
													| !{link.split('=')[0]}<br>
													| <a class='normal' href=!{link.split('=')[1]}>!{link.split('=')[1]}</a>
													| <br>

		div(style='float: right; width: 19.6%;')
			div.main
				each ss in game.ss_urls
					a(href=ss) <img class='ss' src=!{ss} width='100%'>
					hr

				else
					p No screenshots found

			div(style='margin-bottom: 10px;')
				if game.last_updated
					p.subdued(align='right')
						| Last edited:<br>!{game.last_updated}
						| (<span class='timestamp'>!{game.last_updated}</span>)

				if game.entry_created
					p.subdued(align='right')
						| Entry created:<br>!{game.entry_created}
						| (<span class='timestamp'>!{game.entry_created}</span>)

		div(style='float: left; width: 80%;')
			h3.section-heading Releases&nbsp;
				<font style='position: relative; bottom: 3px; font: 11px Verdana;'>
					<a class='gold' href='/release/new/!{game.id}'>add a release <span class='icon-edit'>✎</span></a>
				</font>

			div.main
				if game.releases.length
					table
						tr.heading
							td(width='20%')
								p Release date
							td
							td(width='40%')
								p Title
							td(width='40%')
								p Version
							td
							td
							td

						each release in game.releases
							tr.list
								td
									p= release.release_date
								td
									if release.language == 'Japanese'
										img.flag.flag-jp(src='/images/flags/blank.gif')
									else if release.language == 'English'
										img.flag.flag-gb(src='/images/flags/blank.gif')
									else if release.language == 'French'
										img.flag.flag-fr(src='/images/flags/blank.gif')
								td
									p= release.title
								td
									p= release.version
								td
									if release.info_link
										p <a class='normal' href='!{release.info_link}' style='color: rgb(128,255,192);'>Info</a>&nbsp;
								td
									if release.download
										p <a class='normal' href='!{release.download}'>DL</a>&nbsp;
								td
									p <a class='icon-edit' href='/release/edit/!{release.id}'>✎</a>&nbsp;

				else
					p No releases found

		div(style='float: left; width: 80%;')
			h3.section-heading Ratings and Reviews

			div.main(style='float: left; width: 69.5%;')
				if user
					div(align='right')
						form#review-form
							input(type='hidden' name='game_id' value=game.id)

							textarea(name='review' placeholder='Your review (max 10,000 characters)')= game.user_review
							br

							p <span id='review-saved' class='gold' style='display: none;'>Saved! &nbsp; </span>
								<input id='review-submit' type='submit' class='small' value='Save'>

					hr.bright

				if game.reviews.length
					each review in game.reviews
						h5 !{review.username} <span class='subdued'>—</span> <span class='rating'>!{review.rating}</span>
						div.darkened
							pre= review.review

						p.subdued(align='right')= review.time_stamp

				else
					p No reviews found

			div.main(style='float: right; width: 30%;')
				if user
					div.darkened(style='margin-bottom: 5px;')
						form#rating-form
							input(type='hidden' name='game_id' value=game.id)

							p Your rating: &nbsp;
								| <input id='user-rating' type='number' name='user_rating' min='1' max='10' step='.1' value=!{game.user_rating}>
								| <span class='subdued'>/10</span> &nbsp;
								| <input id='rating-submit' type='submit' class='small' value='Save'> &nbsp;
								| <span id='rating-saved' class='gold' style='display: none;'>Saved!</span>

				table
					if game.ratings.length
						tr.list
							td.label
								p Score/Bayesian rating
							td
								p.rating= game.rating_bayesian

						tr.list
							td.label
								p Average rating
							td
								p.rating= game.rating_average

					tr.list
						td.label(width='50%')
							p Number of ratings
						td
							p= game.ratings.length

				if game.ratings.length
					div(style='margin: 10px 0 10px 0;')
						canvas#ratings-chart

					table
						each rating in game.ratings_recent
							tr.list
								td.label(width='40%')
									p.timestamp= rating.f3
								td.label(width='10%')
									p.rating= rating.f2
								td
									p= rating.f1
